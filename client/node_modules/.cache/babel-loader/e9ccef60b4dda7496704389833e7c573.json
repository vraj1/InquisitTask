{"ast":null,"code":"var _jsxFileName = \"/Users/vrajpatel/Desktop/InquistTask/client/src/components/UsersMain.js\";\nimport React, { Component } from 'react';\nimport { getProfile, getAllUsers, connectUser, schedulePhoneCall, getConnectedUserInfo, cancelPhoneCall } from './APICalls';\nimport './UsersMain.css';\nimport NavigationBar from './NavigationBar';\nimport { runInThisContext } from 'vm';\n\nclass UsersMain extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: '',\n      username: '',\n      email: '',\n      connected_users: '',\n      phone_calls_date: '',\n      phone_calls_time: '',\n      allUser: [],\n      currClickedUser: '',\n      phoneCallDateTime: '',\n      connectedUserName: ''\n    };\n    this.connectwithUser = this.connectwithUser.bind(this);\n    this.schedulePhoneCall = this.schedulePhoneCall.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.cancelPhoneCall = this.cancelPhoneCall.bind(this);\n  }\n\n  componentDidMount() {\n    getProfile().then(res => {\n      this.setState({\n        id: res.user.id,\n        username: res.user.username,\n        email: res.user.email,\n        connected_users: res.user.connected_users,\n        phone_calls_date: res.user.phone_calls_date,\n        phone_calls_time: res.user.phone_calls_time\n      });\n      console.log(this.state);\n    }).then(dataNeeded => {\n      console.log(this.state.connected_users);\n      const connectedUser = {\n        id: this.state.connected_users\n      };\n      getConnectedUserInfo(connectedUser).then(res => {\n        this.setState({\n          connectedUserName: res.currConnectedUser + ' ' + res.currConnectedUserLastName\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n    getAllUsers().then(res => {\n      console.log(res.allUsers.filter(users => users.id != this.state.id));\n      this.setState({\n        allUser: res.allUsers.filter(users => users.id != this.state.id)\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  connectwithUser(e) {\n    e.preventDefault();\n    const connecttoUser = e.target.value;\n\n    if (connecttoUser == this.state.connected_users) {\n      alert('You are already connected to this user');\n      return;\n    }\n\n    this.setState({\n      currClickedUser: connecttoUser\n    });\n    const currUser = {\n      id: this.state.id,\n      connected_user_id: connecttoUser\n    };\n    connectUser(currUser).then(res => {\n      console.log(res);\n      this.setState({\n        connected_users: connecttoUser\n      });\n      alert('You are connected!');\n    });\n  }\n\n  schedulePhoneCall(e) {\n    e.preventDefault();\n    console.log(e.target.dateTime.value);\n    const phoneDateTime = e.target.dateTime.value;\n    const phoneDate = phoneDateTime.split('T')[0];\n    const phoneTime = phoneDateTime.split('T')[1];\n    console.log(phoneDateTime.split('T')[0]);\n    console.log(phoneDateTime.split('T')[1]);\n    const newPhoneCall = {\n      id: this.state.id,\n      phone_date: phoneDate,\n      phone_time: phoneTime\n    };\n    schedulePhoneCall(newPhoneCall).then(res => {\n      console.log(res);\n      this.setState({\n        phone_calls_date: phoneDate,\n        phone_calls_time: phoneTime\n      });\n      alert('Your phone call has been scheudled!');\n    });\n  }\n\n  cancelPhoneCall(e) {\n    e.preventDefault();\n    const phoneCallCancel = {\n      id: this.state.id,\n      connected_user: this.state.connected_users\n    };\n    cancelPhoneCall(phoneCallCancel).then(res => {\n      console.log(res);\n      this.setState({\n        phone_calls_date: '',\n        phone_calls_time: ''\n      });\n      alert('Your Phone call has been cancelled');\n    });\n  }\n\n  render() {\n    const showConnections = React.createElement(\"div\", {\n      id: \"connectionsDislpay\",\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, 'You are connected to ' + this.state.connectedUserName, \".\"), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.phone_calls_date ? 'You have a call at ' + this.state.phone_calls_date + ' ' + 'at ' + this.state.phone_calls_time : 'Scehdule a call by clicking the button below'));\n    const scheduleNewPhoneCall = React.createElement(\"div\", {\n      id: \"accordion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"mainScheduler\",\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      id: \"headingTwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-link collapsed\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#collapseTwo\",\n      \"aria-expanded\": \"false\",\n      \"aria-controls\": \"collapseTwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.phone_calls_date ? 'Edit Date and Time' : 'Schedule Phone Call'))), React.createElement(\"div\", {\n      id: \"collapseTwo\",\n      className: \"collapse\",\n      \"aria-labelledby\": \"headingTwo\",\n      \"data-parent\": \"#accordion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"dateTimeForm\",\n      noValidate: true,\n      onSubmit: this.schedulePhoneCall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"dateTimeLabel\",\n      htmlFor: \"datetime-local\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Date(yyyy/mm/dd) Time\"), React.createElement(\"input\", {\n      className: \"dateTimeInput\",\n      type: \"datetime-local\",\n      text: \"Phone Call Date and Time\",\n      name: \"dateTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"dateTimeSubmit\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))))));\n    const cancelPhoneCall = React.createElement(\"button\", {\n      onClick: this.cancelPhoneCall,\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Cancel Scheduled Call\");\n    return React.createElement(\"div\", {\n      id: \"mainContainer\",\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"profileSection\",\n      id: \"profileCard\",\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      id: \"mainprofileTitle\",\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, 'Welcome ' + this.state.username), this.state.connected_users ? showConnections : 'If you wish to connect to someone please choose from below', this.state.phone_calls_date ? scheduleNewPhoneCall : scheduleNewPhoneCall, this.state.phone_calls_date ? cancelPhoneCall : '')), React.createElement(\"div\", {\n      className: \"card-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"allUsersTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"All Users \"), this.state.allUser.map((item, key) => {\n      return React.createElement(\"div\", {\n        className: \"card\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body text-center\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, item.first_name + ' ' + item.last_name), React.createElement(\"h6\", {\n        className: \"card-subtitle mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, item.username), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(\"button\", {\n        onClick: this.connectwithUser,\n        value: item.id,\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Connect to User\")));\n    })));\n  }\n\n}\n\nexport default UsersMain;","map":{"version":3,"sources":["/Users/vrajpatel/Desktop/InquistTask/client/src/components/UsersMain.js"],"names":["React","Component","getProfile","getAllUsers","connectUser","schedulePhoneCall","getConnectedUserInfo","cancelPhoneCall","NavigationBar","runInThisContext","UsersMain","constructor","state","id","username","email","connected_users","phone_calls_date","phone_calls_time","allUser","currClickedUser","phoneCallDateTime","connectedUserName","connectwithUser","bind","onChange","componentDidMount","then","res","setState","user","console","log","dataNeeded","connectedUser","currConnectedUser","currConnectedUserLastName","catch","err","allUsers","filter","users","e","target","name","value","preventDefault","connecttoUser","alert","currUser","connected_user_id","dateTime","phoneDateTime","phoneDate","split","phoneTime","newPhoneCall","phone_date","phone_time","phoneCallCancel","connected_user","render","showConnections","scheduleNewPhoneCall","map","item","key","first_name","last_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { getProfile, getAllUsers, connectUser, schedulePhoneCall, getConnectedUserInfo , cancelPhoneCall} from './APICalls'\nimport './UsersMain.css'\nimport NavigationBar from './NavigationBar';\nimport { runInThisContext } from 'vm'\nclass UsersMain extends Component {\n    constructor(){\n        super()\n        this.state ={\n            id: '',\n            username:'',\n            email: '',\n            connected_users: '',\n            phone_calls_date: '',\n            phone_calls_time:'',\n            allUser: [],\n            currClickedUser: '',\n            phoneCallDateTime: '',\n            connectedUserName: '',\n        }\n\n        this.connectwithUser = this.connectwithUser.bind(this);\n        this.schedulePhoneCall = this.schedulePhoneCall.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.cancelPhoneCall = this.cancelPhoneCall.bind(this);\n    }\n\n    componentDidMount(){\n        getProfile().then(res => {\n            this.setState({\n                id: res.user.id,\n                username: res.user.username,\n                email: res.user.email,\n                connected_users: res.user.connected_users,\n                phone_calls_date: res.user.phone_calls_date,\n                phone_calls_time: res.user.phone_calls_time,\n            })\n            console.log(this.state)\n        }).then(dataNeeded => {\n            console.log(this.state.connected_users)\n            const connectedUser = {\n                id: this.state.connected_users\n            }\n            \n            getConnectedUserInfo(connectedUser).then(res => {\n\n                this.setState({\n                    connectedUserName: res.currConnectedUser + ' ' + res.currConnectedUserLastName\n                });\n\n               \n            }).catch(err => {\n                console.log(err);\n            })\n        })\n        getAllUsers().then(res =>{\n            console.log(res.allUsers.filter(users => users.id != this.state.id));\n           \n            \n            this.setState({\n                allUser: res.allUsers.filter(users => users.id != this.state.id)\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n        \n        \n\n    }\n    \n    onChange(e){\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    connectwithUser(e){\n        e.preventDefault();\n        \n        const connecttoUser = e.target.value\n        if(connecttoUser == this.state.connected_users){\n            alert('You are already connected to this user');\n            return;\n        }\n        this.setState({\n            currClickedUser: connecttoUser\n        })\n        const currUser = {\n            id: this.state.id,\n            connected_user_id: connecttoUser\n        }\n        connectUser(currUser).then(res => {\n            console.log(res);\n            this.setState({\n                connected_users: connecttoUser\n            })\n            alert('You are connected!')\n        })\n    }\n\n    schedulePhoneCall(e){\n        e.preventDefault()\n        console.log(e.target.dateTime.value)\n        const phoneDateTime = e.target.dateTime.value;\n        const phoneDate = phoneDateTime.split('T')[0];\n        const phoneTime = phoneDateTime.split('T')[1]\n        console.log(phoneDateTime.split('T')[0]);\n        console.log(phoneDateTime.split('T')[1]);\n        const newPhoneCall = {\n            id: this.state.id,\n            phone_date: phoneDate,\n            phone_time: phoneTime\n        }\n\n        schedulePhoneCall(newPhoneCall).then(res => {\n            console.log(res);\n            this.setState({\n                phone_calls_date: phoneDate,\n                phone_calls_time: phoneTime\n            })\n            alert('Your phone call has been scheudled!');\n        })\n\n\n    }\n\n    cancelPhoneCall(e){\n        e.preventDefault()\n        const phoneCallCancel = {\n            id: this.state.id,\n            connected_user: this.state.connected_users\n        }\n        cancelPhoneCall(phoneCallCancel).then(res => {\n            console.log(res);\n            this.setState({\n                phone_calls_date: '',\n                phone_calls_time: ''\n            })\n            alert('Your Phone call has been cancelled');\n        })\n\n    }\n\n    \n    \n    render() {\n        const showConnections = (\n            <div id=\"connectionsDislpay\" className=\"container\">\n                <p className=\"card-text\">{'You are connected to ' + this.state.connectedUserName}.</p>\n                <p className=\"card-text\">{this.state.phone_calls_date ? 'You have a call at ' + this.state.phone_calls_date + ' ' + 'at ' + this.state.phone_calls_time : 'Scehdule a call by clicking the button below'}</p>\n            </div>\n        )\n\n        const scheduleNewPhoneCall = (\n            <div id=\"accordion\">\n            <div id=\"mainScheduler\" className=\"card\">\n                <div className=\"card-header\" id=\"headingTwo\">\n                    <h5 className=\"mb-0\">\n                        <button className=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                        {this.state.phone_calls_date ? 'Edit Date and Time': 'Schedule Phone Call'}\n                        </button>\n                    </h5>\n                </div>\n                <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\n                    <div className=\"card-body\">\n                            <form className=\"dateTimeForm\" noValidate onSubmit={this.schedulePhoneCall}>\n                                <label className=\"dateTimeLabel\" htmlFor=\"datetime-local\">Date(yyyy/mm/dd) Time</label>\n                                    <input className=\"dateTimeInput\" type=\"datetime-local\" text=\"Phone Call Date and Time\" name=\"dateTime\"/>\n                                    \n                                    <input className=\"dateTimeSubmit\" type=\"submit\"/>\n                            </form>\n                    </div>\n                </div>\n            </div>\n            </div>\n                \n           \n        \n       )\n\n       const cancelPhoneCall = (\n        <button onClick={this.cancelPhoneCall}type=\"submit\" className=\"btn btn-primary\">Cancel Scheduled Call</button>\n       )\n\n    return (\n            \n            <div id=\"mainContainer\" className=\"container\">\n                <div id=\"profileSection\" id =\"profileCard\" className=\"card text-center\">\n\n                    <div className=\"card-body\">\n                        <h5 id=\"mainprofileTitle\" className=\"card-title\">{'Welcome ' + this.state.username}</h5>\n                        {this.state.connected_users ? showConnections: 'If you wish to connect to someone please choose from below'}\n                        {this.state.phone_calls_date ? scheduleNewPhoneCall: scheduleNewPhoneCall}\n                        {this.state.phone_calls_date? cancelPhoneCall: ''}\n                    </div>\n\n                </div>\n\n                <div className=\"card-group\">\n                    <div id=\"allUsersTable\">All Users </div>\n\n                {this.state.allUser.map((item, key) => {\n                        return(\n\n                            <div className=\"card\"  key={key}>\n                                <div className=\"card-body text-center\" key={key}>\n                                    <h5 className=\"card-title\">{item.first_name +  ' ' + item.last_name}</h5>\n                                    <h6 className=\"card-subtitle mb-2 text-muted\">{item.username}</h6>\n                                    <p className=\"card-text\">\n                                        Some quick example text to build on the card title and make up the bulk of the card's content.\n                                    </p>\n                                    <button onClick={this.connectwithUser} value={item.id} type=\"submit\" className=\"btn btn-primary\">Connect to User</button>\n                                    \n                                </div>\n\n                            </div>\n                        )\n                })}\n                </div>\n            </div> \n        )\n    }\n}\n\nexport default UsersMain"]},"metadata":{},"sourceType":"module"}